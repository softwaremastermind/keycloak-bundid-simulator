name: Dependabot Docker Build & Versioning

on:
  pull_request:
    branches:
      - main

jobs:
  determine-tag:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Holt alle Tags und Commits

      - name: Lese neuestes Tag und erhöhe Patch-Version
        id: bump_version
        run: |
          # Finde das höchste Tag in SemVer-Format
          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1 || echo "v0.0.0")

          # Zerlege in Major, Minor, Patch
          major=$(echo "$latest_tag" | cut -d. -f1 | tr -d 'v')
          minor=$(echo "$latest_tag" | cut -d. -f2)
          patch=$(echo "$latest_tag" | cut -d. -f3)

          # Erhöhe Patch-Version
          new_patch=$((patch + 1))
          new_tag="v${major}.${minor}.${new_patch}"

          echo "Neues Tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Setze neuen Git-Tag und pushe
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          #git tag ${{ env.new_tag }}
          #git push origin ${{ env.new_tag }}

  docker-build:
    needs: determine-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repo

      - uses: docker/setup-buildx-action@v3
        name: Setup Docker

      - uses: docker/login-action@v3
        name: Login to DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Output Tag
        run: |
          echo ${{ needs.determine-tag.outputs.new_tag }}


      #- uses: docker/build-push-action@v6
      #  name: Docker Build and Push
      #  with:
      #    push: true
      #    tags: baopdt/keycloak-bundid-simulator:${{ needs.determine-tag.outputs.new_tag }}
